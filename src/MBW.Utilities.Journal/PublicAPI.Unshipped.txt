#nullable enable
MBW.Utilities.Journal.Exceptions.JournalCorruptedException
MBW.Utilities.Journal.Exceptions.JournalCorruptedException.JournalCorruptedException(string! message, bool originalFileHasBeenAltered) -> void
MBW.Utilities.Journal.Exceptions.JournalCorruptedException.OriginalFileHasBeenAltered.get -> bool
MBW.Utilities.Journal.FileBasedJournalStream
MBW.Utilities.Journal.FileBasedJournalStream.Delete() -> void
MBW.Utilities.Journal.FileBasedJournalStream.Exists() -> bool
MBW.Utilities.Journal.FileBasedJournalStream.FileBasedJournalStream(string! file) -> void
MBW.Utilities.Journal.FileBasedJournalStream.OpenOrCreate() -> System.IO.Stream!
MBW.Utilities.Journal.IJournalStream
MBW.Utilities.Journal.IJournalStream.Delete() -> void
MBW.Utilities.Journal.IJournalStream.Exists() -> bool
MBW.Utilities.Journal.IJournalStream.OpenOrCreate() -> System.IO.Stream!
MBW.Utilities.Journal.JournaledStream
MBW.Utilities.Journal.JournaledStream.Commit() -> void
MBW.Utilities.Journal.JournaledStream.JournaledStream(System.IO.Stream! inner, MBW.Utilities.Journal.IJournalStream! journalStreamCreator) -> void
MBW.Utilities.Journal.JournaledStream.JournaledStream(System.IO.Stream! inner, string! journalFilePath) -> void
MBW.Utilities.Journal.JournaledStream.Rollback() -> void
override MBW.Utilities.Journal.JournaledStream.CanRead.get -> bool
override MBW.Utilities.Journal.JournaledStream.CanSeek.get -> bool
override MBW.Utilities.Journal.JournaledStream.CanWrite.get -> bool
override MBW.Utilities.Journal.JournaledStream.Flush() -> void
override MBW.Utilities.Journal.JournaledStream.Length.get -> long
override MBW.Utilities.Journal.JournaledStream.Position.get -> long
override MBW.Utilities.Journal.JournaledStream.Position.set -> void
override MBW.Utilities.Journal.JournaledStream.Read(byte[]! buffer, int offset, int count) -> int
override MBW.Utilities.Journal.JournaledStream.Seek(long offset, System.IO.SeekOrigin origin) -> long
override MBW.Utilities.Journal.JournaledStream.SetLength(long value) -> void
override MBW.Utilities.Journal.JournaledStream.Write(byte[]! buffer, int offset, int count) -> void